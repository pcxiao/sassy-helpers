#!/usr/bin/env ruby

# Combine multiple models into one

require "rubygems"
require "bundler/setup"

require 'optparse'
require 'sassy-helpers'

options = {
	:execute => false
}

OptionParser.new do |opts|
	opts.banner = "Usage: sassycombine [files] [options]"

	opts.on("--output NAME", String, "Output base name -- must be specified to write something, otherwise will only dry-run.") do |n|
        options[:output] = n
    end
	
	# Coupling Parameters
	# -------------------
	#
	# These may be parameters in each model, and will be turned 
	# into species. Note that the models must be specified in the
	# right order: The model which assigns a value to the coupling 
	# parameter must come last (since after this point, the parameter
	# will be turned into a species which cannot be overwritten without
	# an error)
	#Â 
	opts.on("--couple x,y,z", Array, "List of coupling parameters") do |list|
		options[:coupling_parameters] = list
	end
	
	opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit
    end

    opts.on_tail("--version", "Show version") do
        puts SassyHelpers::VERSION + "\n"
        exit
    end
end.parse!

ix = ARGV.index {|o| o.match(/^\-/)}
if ix
	files = ARGV[0..ix]
else
	files = ARGV
end

raise "No inputs specified" if files.length == 0

m = Modelling::Model.new

pp options

# files.each do |f|
# 	m.from_sassy(f)

# 	params = m.parameters.keys

# end